m(x_union_cotangential_contours_xld);
m(x_polar_trans_contour_xld_inv);
m(x_polar_trans_contour_xld);
m(x_gen_nurbs_interp);
m(x_gen_contour_nurbs_xld);
m(x_union2_closed_polygons_xld);
m(x_union2_closed_contours_xld);
m(x_symm_difference_closed_polygons_xld);
m(x_symm_difference_closed_contours_xld);
m(x_difference_closed_polygons_xld);
m(x_difference_closed_contours_xld);
m(x_intersection_closed_polygons_xld);
m(x_intersection_closed_contours_xld);
m(x_union_cocircular_contours_xld);
m(x_crop_contours_xld);
m(x_gen_cross_contour_xld);
m(x_sort_contours_xld);
m(x_merge_cont_line_scan_xld);
m(x_read_polygon_xld_arc_info);
m(x_write_polygon_xld_arc_info);
m(x_read_contour_xld_arc_info);
m(x_write_contour_xld_arc_info);
m(x_read_world_file);
m(x_gen_parallel_contour_xld);
m(x_gen_rectangle2_contour_xld);
m(x_dist_rectangle2_contour_points_xld);
m(x_fit_rectangle2_contour_xld);
m(x_segment_contour_attrib_xld);
m(x_segment_contours_xld);
m(x_fit_circle_contour_xld);
m(x_fit_line_contour_xld);
m(x_dist_ellipse_contour_points_xld);
m(x_dist_ellipse_contour_xld);
m(x_fit_ellipse_contour_xld);
m(x_gen_circle_contour_xld);
m(x_gen_ellipse_contour_xld);
m(x_add_noise_white_contour_xld);
m(x_combine_roads_xld);
m(x_max_parallels_xld);
m(x_mod_parallels_xld);
m(x_info_parallels_xld);
m(x_get_parallels_xld);
m(x_gen_parallels_xld);
m(x_get_lines_xld);
m(x_get_polygon_xld);
m(x_gen_polygons_xld);
m(x_split_contours_xld);
m(x_projective_trans_contour_xld);
m(x_affine_trans_polygon_xld);
m(x_affine_trans_contour_xld);
m(x_close_contours_xld);
m(x_clip_end_points_contours_xld);
m(x_clip_contours_xld);
m(x_local_max_contours_xld);
m(x_union_straight_contours_histo_xld);
m(x_union_straight_contours_xld);
m(x_union_collinear_contours_ext_xld);
m(x_union_collinear_contours_xld);
m(x_union_adjacent_contours_xld);
m(x_select_contours_xld);
m(x_get_regress_params_xld);
m(x_regress_contours_xld);
m(x_get_contour_angle_xld);
m(x_smooth_contours_xld);
m(x_contour_point_num_xld);
m(x_query_contour_global_attribs_xld);
m(x_get_contour_global_attrib_xld);
m(x_query_contour_attribs_xld);
m(x_get_contour_attrib_xld);
m(x_get_contour_xld);
m(x_gen_contour_region_xld);
m(x_gen_contour_polygon_rounded_xld);
m(x_gen_contour_polygon_xld);
m(x_gen_contours_skeleton_xld);
m(x_disp_xld);
m(x_wiener_filter_ni);
m(x_wiener_filter);
m(x_gen_psf_motion);
m(x_simulate_motion);
m(x_gen_psf_defocus);
m(x_simulate_defocus);
m(x_deserialize_variation_model);
m(x_serialize_variation_model);
m(x_read_variation_model);
m(x_write_variation_model);
m(x_get_thresh_images_variation_model);
m(x_get_variation_model);
m(x_compare_ext_variation_model);
m(x_compare_variation_model);
m(x_prepare_direct_variation_model);
m(x_prepare_variation_model);
m(x_train_variation_model);
m(x_clear_all_variation_models);
m(x_clear_variation_model);
m(x_clear_train_data_variation_model);
m(x_create_variation_model);
m(x_tuple_union);
m(x_tuple_intersection);
m(x_tuple_difference);
m(x_tuple_symmdiff);
m(x_tuple_is_string_elem);
m(x_tuple_is_real_elem);
m(x_tuple_is_int_elem);
m(x_tuple_type_elem);
m(x_tuple_is_mixed);
m(x_tuple_is_string);
m(x_tuple_is_real);
m(x_tuple_is_int);
m(x_tuple_type);
m(x_tuple_histo_range);
m(x_tuple_regexp_select);
m(x_tuple_regexp_test);
m(x_tuple_regexp_replace);
m(x_tuple_regexp_match);
m(x_tuple_rand);
m(x_tuple_length);
m(x_tuple_sgn);
m(x_tuple_max2);
m(x_tuple_min2);
m(x_tuple_max);
m(x_tuple_min);
m(x_tuple_cumul);
m(x_tuple_select_rank);
m(x_tuple_median);
m(x_tuple_sum);
m(x_tuple_mean);
m(x_tuple_deviation);
m(x_tuple_uniq);
m(x_tuple_find_last);
m(x_tuple_find_first);
m(x_tuple_find);
m(x_tuple_sort_index);
m(x_tuple_sort);
m(x_tuple_inverse);
m(x_tuple_concat);
m(x_tuple_select_range);
m(x_tuple_last_n);
m(x_tuple_first_n);
m(x_tuple_insert);
m(x_tuple_replace);
m(x_tuple_remove);
m(x_tuple_select_mask);
m(x_tuple_select);
m(x_tuple_str_bit_select);
m(x_tuple_gen_sequence);
m(x_tuple_gen_const);
m(x_tuple_environment);
m(x_tuple_split);
m(x_tuple_substr);
m(x_tuple_str_last_n);
m(x_tuple_str_first_n);
m(x_tuple_strrchr);
m(x_tuple_strchr);
m(x_tuple_strrstr);
m(x_tuple_strstr);
m(x_tuple_strlen);
m(x_tuple_less_equal_elem);
m(x_tuple_less_elem);
m(x_tuple_greater_equal_elem);
m(x_tuple_greater_elem);
m(x_tuple_not_equal_elem);
m(x_tuple_equal_elem);
m(x_tuple_less_equal);
m(x_tuple_less);
m(x_tuple_greater_equal);
m(x_tuple_greater);
m(x_tuple_not_equal);
m(x_tuple_equal);
m(x_tuple_not);
m(x_tuple_xor);
m(x_tuple_or);
m(x_tuple_and);
m(x_tuple_bnot);
m(x_tuple_bxor);
m(x_tuple_bor);
m(x_tuple_band);
m(x_tuple_rsh);
m(x_tuple_lsh);
m(x_tuple_chrt);
m(x_tuple_ords);
m(x_tuple_chr);
m(x_tuple_ord);
m(x_tuple_string);
m(x_tuple_is_number);
m(x_tuple_number);
m(x_tuple_round);
m(x_tuple_int);
m(x_tuple_real);
m(x_tuple_ldexp);
m(x_tuple_fmod);
m(x_tuple_mod);
m(x_tuple_ceil);
m(x_tuple_floor);
m(x_tuple_pow);
m(x_tuple_log10);
m(x_tuple_log);
m(x_tuple_exp);
m(x_tuple_tanh);
m(x_tuple_cosh);
m(x_tuple_sinh);
m(x_tuple_rad);
m(x_tuple_deg);
m(x_tuple_atan2);
m(x_tuple_atan);
m(x_tuple_acos);
m(x_tuple_asin);
m(x_tuple_tan);
m(x_tuple_cos);
m(x_tuple_sin);
m(x_tuple_fabs);
m(x_tuple_sqrt);
m(x_tuple_abs);
m(x_tuple_neg);
m(x_tuple_div);
m(x_tuple_mult);
m(x_tuple_sub);
m(x_tuple_add);
m(x_deserialize_tuple);
m(x_serialize_tuple);
m(x_write_tuple);
m(x_read_tuple);
m(x_pose_average);
m(x_quat_rotate_point_3d);
m(x_quat_conjugate);
m(x_quat_normalize);
m(x_axis_angle_to_quat);
m(x_quat_to_pose);
m(x_pose_invert);
m(x_pose_compose);
m(x_quat_to_hom_mat3d);
m(x_pose_to_quat);
m(x_quat_interpolate);
m(x_quat_compose);
m(x_deserialize_hom_mat3d);
m(x_serialize_hom_mat3d);
m(x_deserialize_hom_mat2d);
m(x_serialize_hom_mat2d);
m(x_deserialize_quat);
m(x_serialize_quat);
m(x_projective_trans_hom_point_3d);
m(x_projective_trans_point_3d);
m(x_affine_trans_point_3d);
m(x_vector_to_hom_mat3d);
m(x_hom_mat3d_determinant);
m(x_hom_mat3d_transpose);
m(x_hom_mat3d_invert);
m(x_hom_mat3d_compose);
m(x_hom_mat3d_rotate_local);
m(x_hom_mat3d_rotate);
m(x_hom_mat3d_scale_local);
m(x_hom_mat3d_scale);
m(x_hom_mat3d_translate_local);
m(x_hom_mat3d_translate);
m(x_hom_mat3d_identity);
m(x_hom_mat3d_project);
m(x_bundle_adjust_mosaic);
m(x_proj_match_points_distortion_ransac_guided);
m(x_proj_match_points_distortion_ransac);
m(x_proj_match_points_ransac_guided);
m(x_proj_match_points_ransac);
m(x_vector_to_proj_hom_mat2d_distortion);
m(x_hom_vector_to_proj_hom_mat2d);
m(x_vector_to_proj_hom_mat2d);
m(x_hom_mat2d_to_affine_par);
m(x_vector_angle_to_rigid);
m(x_point_line_to_hom_mat2d);
m(x_vector_to_rigid);
m(x_vector_to_similarity);
m(x_vector_to_aniso);
m(x_vector_to_hom_mat2d);
m(x_projective_trans_pixel);
m(x_projective_trans_point_2d);
m(x_affine_trans_pixel);
m(x_affine_trans_point_2d);
m(x_hom_mat2d_determinant);
m(x_hom_mat2d_transpose);
m(x_hom_mat2d_invert);
m(x_hom_mat2d_compose);
m(x_hom_mat2d_reflect_local);
m(x_hom_mat2d_reflect);
m(x_hom_mat2d_slant_local);
m(x_hom_mat2d_slant);
m(x_hom_mat2d_rotate_local);
m(x_hom_mat2d_rotate);
m(x_hom_mat2d_scale_local);
m(x_hom_mat2d_scale);
m(x_hom_mat2d_translate_local);
m(x_hom_mat2d_translate);
m(x_hom_mat2d_identity);
m(x_clear_all_scattered_data_interpolators);
m(x_clear_scattered_data_interpolator);
m(x_interpolate_scattered_data);
m(x_create_scattered_data_interpolator);
m(x_interpolate_scattered_data_points_to_image);
m(x_interpolate_scattered_data_image);
m(x_get_system_time);
m(x_get_compute_device_param);
m(x_set_compute_device_param);
m(x_release_all_compute_devices);
m(x_release_compute_device);
m(x_deactivate_all_compute_devices);
m(x_deactivate_compute_device);
m(x_activate_compute_device);
m(x_init_compute_device);
m(x_open_compute_device);
m(x_get_compute_device_info);
m(x_query_available_compute_devices);
m(x_clear_serial);
m(x_write_serial);
m(x_read_serial);
m(x_get_serial_param);
m(x_set_serial_param);
m(x_close_all_serials);
m(x_close_serial);
m(x_open_serial);
m(x_wait_seconds);
m(x_system_call);
m(x_set_system);
m(x_set_check);
m(x_reset_obj_db);
m(x_get_system);
m(x_get_check);
m(x_get_error_text);
m(x_count_seconds);
m(x_count_relation);
m(x_receive_image);
m(x_send_image);
m(x_receive_region);
m(x_send_region);
m(x_receive_xld);
m(x_send_xld);
m(x_receive_tuple);
m(x_send_tuple);
m(x_receive_data);
m(x_send_data);
m(x_get_socket_param);
m(x_set_socket_param);
m(x_get_next_socket_data_type);
m(x_get_socket_descriptor);
m(x_get_socket_timeout);
m(x_set_socket_timeout);
m(x_close_all_sockets);
m(x_close_socket);
m(x_socket_accept_connect);
m(x_open_socket_connect);
m(x_open_socket_accept);
m(x_get_extended_error_info);
m(x_get_modules);
m(x_binocular_distance_ms);
m(x_binocular_disparity_ms);
m(x_binocular_distance_mg);
m(x_binocular_disparity_mg);
m(x_reconst3d_from_fundamental_matrix);
m(x_gen_binocular_proj_rectification);
m(x_vector_to_fundamental_matrix_distortion);
m(x_rel_pose_to_fundamental_matrix);
m(x_essential_to_fundamental_matrix);
m(x_vector_to_rel_pose);
m(x_vector_to_essential_matrix);
m(x_vector_to_fundamental_matrix);
m(x_match_fundamental_matrix_distortion_ransac);
m(x_match_rel_pose_ransac);
m(x_match_essential_matrix_ransac);
m(x_match_fundamental_matrix_ransac);
m(x_binocular_distance);
m(x_binocular_disparity);
m(x_intersect_lines_of_sight);
m(x_disparity_image_to_xyz);
m(x_disparity_to_point_3d);
m(x_disparity_to_distance);
m(x_distance_to_disparity);
m(x_gen_binocular_rectification_map);
m(x_binocular_calibration);
m(x_query_spy);
m(x_set_spy);
m(x_get_spy);
m(x_read_sheet_of_light_model);
m(x_write_sheet_of_light_model);
m(x_deserialize_sheet_of_light_model);
m(x_serialize_sheet_of_light_model);
m(x_create_sheet_of_light_calib_object);
m(x_calibrate_sheet_of_light);
m(x_get_sheet_of_light_result_object_model_3d);
m(x_get_sheet_of_light_result);
m(x_apply_sheet_of_light_calibration);
m(x_set_profile_sheet_of_light);
m(x_measure_profile_sheet_of_light);
m(x_set_sheet_of_light_param);
m(x_get_sheet_of_light_param);
m(x_query_sheet_of_light_params);
m(x_reset_sheet_of_light_model);
m(x_clear_all_sheet_of_light_models);
m(x_clear_sheet_of_light_model);
m(x_create_sheet_of_light_model);
m(x_shade_height_field);
m(x_estimate_al_am);
m(x_estimate_sl_al_zc);
m(x_estimate_sl_al_lr);
m(x_estimate_tilt_zc);
m(x_estimate_tilt_lr);
m(x_phot_stereo);
m(x_reconstruct_height_field_from_gradient);
m(x_photometric_stereo);
m(x_sfs_pentland);
m(x_sfs_orig_lr);
m(x_sfs_mod_lr);
m(x_receive_serialized_item);
m(x_send_serialized_item);
m(x_fwrite_serialized_item);
m(x_fread_serialized_item);
m(x_clear_all_serialized_items);
m(x_clear_serialized_item);
m(x_get_serialized_item_ptr);
m(x_create_serialized_item_ptr);
m(x_fit_primitives_object_model_3d);
m(x_segment_object_model_3d);
m(x_clear_all_text_results);
m(x_clear_text_result);
m(x_get_text_object);
m(x_get_text_result);
m(x_find_text);
m(x_get_text_model_param);
m(x_set_text_model_param);
m(x_clear_all_text_models);
m(x_clear_text_model);
m(x_create_text_model_reader);
m(x_create_text_model);
m(x_select_characters);
m(x_segment_characters);
m(x_text_line_slant);
m(x_text_line_orientation);
m(x_classify_image_class_lut);
m(x_classify_image_class_knn);
m(x_add_samples_image_class_knn);
m(x_classify_image_class_gmm);
m(x_add_samples_image_class_gmm);
m(x_classify_image_class_svm);
m(x_add_samples_image_class_svm);
m(x_classify_image_class_mlp);
m(x_add_samples_image_class_mlp);
m(x_learn_ndim_norm);
m(x_learn_ndim_box);
m(x_class_ndim_box);
m(x_class_ndim_norm);
m(x_class_2dim_sup);
m(x_class_2dim_unsup);
m(x_check_difference);
m(x_char_threshold);
m(x_label_to_region);
m(x_nonmax_suppression_amp);
m(x_nonmax_suppression_dir);
m(x_hysteresis_threshold);
m(x_binary_threshold);
m(x_local_threshold);
m(x_var_threshold);
m(x_dyn_threshold);
m(x_threshold);
m(x_threshold_sub_pix);
m(x_regiongrowing_n);
m(x_regiongrowing);
m(x_regiongrowing_mean);
m(x_pouring);
m(x_watersheds_threshold);
m(x_watersheds);
m(x_zero_crossing);
m(x_zero_crossing_sub_pix);
m(x_dual_threshold);
m(x_expand_line);
m(x_local_min);
m(x_lowlands);
m(x_lowlands_center);
m(x_local_max);
m(x_plateaus);
m(x_plateaus_center);
m(x_histo_to_thresh);
m(x_auto_threshold);
m(x_bin_threshold);
m(x_fast_threshold);
m(x_polar_trans_region_inv);
m(x_polar_trans_region);
m(x_merge_regions_line_scan);
m(x_partition_rectangle);
m(x_partition_dynamic);
m(x_region_to_label);
m(x_region_to_bin);
m(x_union2);
m(x_union1);
m(x_closest_point_transform);
m(x_distance_transform);
m(x_skeleton);
m(x_projective_trans_region);
m(x_affine_trans_region);
m(x_mirror_region);
m(x_zoom_region);
m(x_move_region);
m(x_junctions_skeleton);
m(x_intersection);
m(x_interjacent);
m(x_fill_up);
m(x_fill_up_shape);
m(x_expand_region);
m(x_clip_region_rel);
m(x_clip_region);
m(x_rank_region);
m(x_connection);
m(x_symm_difference);
m(x_difference);
m(x_complement);
m(x_background_seg);
m(x_hamming_change_region);
m(x_remove_noise_region);
m(x_shape_trans);
m(x_expand_gray);
m(x_expand_gray_ref);
m(x_split_skeleton_lines);
m(x_split_skeleton_region);
m(x_gen_region_histo);
m(x_eliminate_runs);
m(x_surface_normals_object_model_3d);
m(x_smooth_object_model_3d);
m(x_triangulate_object_model_3d);
m(x_clear_all_stereo_models);
m(x_clear_stereo_model);
m(x_reconstruct_points_stereo);
m(x_reconstruct_surface_stereo);
m(x_get_stereo_model_object);
m(x_get_stereo_model_image_pairs);
m(x_set_stereo_model_image_pairs);
m(x_get_stereo_model_param);
m(x_set_stereo_model_param);
m(x_create_stereo_model);
m(x_get_message_queue_param);
m(x_set_message_queue_param);
m(x_dequeue_message);
m(x_enqueue_message);
m(x_clear_message_queue);
m(x_create_message_queue);
m(x_get_message_param);
m(x_set_message_param);
m(x_get_message_obj);
m(x_set_message_obj);
m(x_get_message_tuple);
m(x_set_message_tuple);
m(x_clear_message);
m(x_create_message);
m(x_clear_all_conditions);
m(x_clear_condition);
m(x_broadcast_condition);
m(x_signal_condition);
m(x_timed_wait_condition);
m(x_wait_condition);
m(x_create_condition);
m(x_clear_all_barriers);
m(x_clear_barrier);
m(x_wait_barrier);
m(x_create_barrier);
m(x_clear_all_events);
m(x_clear_event);
m(x_signal_event);
m(x_try_wait_event);
m(x_wait_event);
m(x_create_event);
m(x_clear_all_mutexes);
m(x_clear_mutex);
m(x_unlock_mutex);
m(x_try_lock_mutex);
m(x_lock_mutex);
m(x_create_mutex);
m(x_get_threading_attrib);
m(x_load_par_knowledge);
m(x_store_par_knowledge);
m(x_check_par_hw_potential);
m(x_set_aop_info);
m(x_get_aop_info);
m(x_query_aop_info);
m(x_optimize_aop);
m(x_write_aop_knowledge);
m(x_read_aop_knowledge);
m(x_sensor_kalman);
m(x_test_obj_def);
m(x_test_access);
m(x_obj_diff);
m(x_set_grayval);
m(x_paint_xld);
m(x_paint_region);
m(x_overpaint_region);
m(x_gen_image_proto);
m(x_paint_gray);
m(x_overpaint_gray);
m(x_integer_to_obj);
m(x_obj_to_integer);
m(x_copy_obj);
m(x_concat_obj);
m(x_clear_obj);
m(x_copy_image);
m(x_select_obj);
m(x_compare_obj);
m(x_test_subset_region);
m(x_test_equal_region);
m(x_test_equal_obj);
m(x_count_obj);
m(x_get_channel_info);
m(x_get_obj_class);
m(x_gen_image_interleaved);
m(x_gen_region_polygon_xld);
m(x_gen_region_contour_xld);
m(x_gen_region_polygon_filled);
m(x_gen_region_polygon);
m(x_gen_region_points);
m(x_gen_region_runs);
m(x_gen_rectangle2);
m(x_gen_rectangle1);
m(x_gen_random_region);
m(x_gen_image3);
m(x_gen_image1);
m(x_gen_image_const);
m(x_gen_ellipse_sector);
m(x_gen_ellipse);
m(x_gen_circle_sector);
m(x_gen_circle);
m(x_gen_checker_region);
m(x_gen_grid_region);
m(x_gen_random_regions);
m(x_gen_region_hline);
m(x_gen_region_line);
m(x_gen_empty_obj);
m(x_gen_empty_region);
m(x_gen_image_gray_ramp);
m(x_gen_image3_extern);
m(x_gen_image1_extern);
m(x_gen_image1_rect);
m(x_get_image_pointer1_rect);
m(x_get_image_pointer3);
m(x_get_image_pointer1);
m(x_get_image_type);
m(x_get_image_size);
m(x_get_image_time);
m(x_get_grayval_interpolated);
m(x_get_grayval);
m(x_get_region_thickness);
m(x_get_region_polygon);
m(x_get_region_points);
m(x_get_region_contour);
m(x_get_region_runs);
m(x_get_region_chain);
m(x_get_region_convex);
m(x_do_ocv_simple);
m(x_traind_ocv_proj);
m(x_deserialize_ocv);
m(x_serialize_ocv);
m(x_read_ocv);
m(x_write_ocv);
m(x_close_all_ocvs);
m(x_close_ocv);
m(x_create_ocv_proj);
m(x_do_ocr_word_knn);
m(x_deserialize_ocr_class_knn);
m(x_serialize_ocr_class_knn);
m(x_read_ocr_class_knn);
m(x_write_ocr_class_knn);
m(x_clear_all_ocr_class_knn);
m(x_clear_ocr_class_knn);
m(x_create_ocr_class_knn);
m(x_trainf_ocr_class_knn);
m(x_get_features_ocr_class_knn);
m(x_get_params_ocr_class_knn);
m(x_do_ocr_multi_class_knn);
m(x_do_ocr_single_class_knn);
m(x_select_feature_set_trainf_knn);
m(x_select_feature_set_trainf_mlp_protected);
m(x_select_feature_set_trainf_mlp);
m(x_select_feature_set_trainf_svm_protected);
m(x_select_feature_set_trainf_svm);
m(x_clear_all_lexica);
m(x_clear_lexicon);
m(x_suggest_lexicon);
m(x_lookup_lexicon);
m(x_inspect_lexicon);
m(x_import_lexicon);
m(x_create_lexicon);
m(x_clear_all_ocr_class_svm);
m(x_clear_ocr_class_svm);
m(x_deserialize_ocr_class_svm);
m(x_serialize_ocr_class_svm);
m(x_read_ocr_class_svm);
m(x_write_ocr_class_svm);
m(x_get_features_ocr_class_svm);
m(x_do_ocr_word_svm);
m(x_do_ocr_multi_class_svm);
m(x_do_ocr_single_class_svm);
m(x_reduce_ocr_class_svm);
m(x_trainf_ocr_class_svm_protected);
m(x_trainf_ocr_class_svm);
m(x_get_prep_info_ocr_class_svm);
m(x_get_support_vector_num_ocr_class_svm);
m(x_get_support_vector_ocr_class_svm);
m(x_get_params_ocr_class_svm);
m(x_create_ocr_class_svm);
m(x_clear_all_ocr_class_mlp);
m(x_clear_ocr_class_mlp);
m(x_deserialize_ocr_class_mlp);
m(x_serialize_ocr_class_mlp);
m(x_read_ocr_class_mlp);
m(x_write_ocr_class_mlp);
m(x_get_features_ocr_class_mlp);
m(x_do_ocr_word_mlp);
m(x_do_ocr_multi_class_mlp);
m(x_do_ocr_single_class_mlp);
m(x_trainf_ocr_class_mlp_protected);
m(x_trainf_ocr_class_mlp);
m(x_get_prep_info_ocr_class_mlp);
m(x_get_rejection_params_ocr_class_mlp);
m(x_set_rejection_params_ocr_class_mlp);
m(x_get_regularization_params_ocr_class_mlp);
m(x_set_regularization_params_ocr_class_mlp);
m(x_get_params_ocr_class_mlp);
m(x_create_ocr_class_mlp);
m(x_serialize_ocr);
m(x_deserialize_ocr);
m(x_write_ocr);
m(x_read_ocr);
m(x_do_ocr_single);
m(x_do_ocr_multi);
m(x_info_ocr_class_box);
m(x_create_ocr_class_box);
m(x_traind_ocr_class_box);
m(x_trainf_ocr_class_box);
m(x_protect_ocr_trainf);
m(x_write_ocr_trainf);
m(x_ocr_change_char);
m(x_close_ocr);
m(x_sort_region);
m(x_close_all_ocrs);
m(x_testd_ocr_class_box);
m(x_crop_domain_rel);
m(x_ocr_get_features);
m(x_concat_ocr_trainf);
m(x_write_ocr_trainf_image);
m(x_append_ocr_trainf);
m(x_read_ocr_trainf_names_protected);
m(x_read_ocr_trainf_names);
m(x_read_ocr_trainf_select);
m(x_read_ocr_trainf);
m(x_pruning);
m(x_boundary);
m(x_fitting);
m(x_gen_struct_elements);
m(x_transpose_region);
m(x_thinning_seq);
m(x_thinning_golay);
m(x_thinning);
m(x_thickening_seq);
m(x_thickening_golay);
m(x_thickening);
m(x_hit_or_miss_seq);
m(x_hit_or_miss_golay);
m(x_hit_or_miss);
m(x_golay_elements);
m(x_morph_skiz);
m(x_morph_skeleton);
m(x_morph_hat);
m(x_bottom_hat);
m(x_top_hat);
m(x_minkowski_sub2);
m(x_minkowski_sub1);
m(x_minkowski_add2);
m(x_minkowski_add1);
m(x_closing_rectangle1);
m(x_closing_golay);
m(x_closing_circle);
m(x_closing);
m(x_opening_seg);
m(x_opening_golay);
m(x_opening_rectangle1);
m(x_opening_circle);
m(x_opening);
m(x_erosion_seq);
m(x_erosion_golay);
m(x_erosion_rectangle1);
m(x_erosion_circle);
m(x_erosion2);
m(x_erosion1);
m(x_dilation_seq);
m(x_dilation_golay);
m(x_dilation_rectangle1);
m(x_dilation_circle);
m(x_dilation2);
m(x_dilation1);
m(x_gray_bothat);
m(x_gray_tophat);
m(x_gray_closing);
m(x_gray_opening);
m(x_gray_dilation);
m(x_gray_erosion);
m(x_read_gray_se);
m(x_gen_disc_se);
m(x_get_metrology_object_model_contour);
m(x_get_metrology_object_result_contour);
m(x_align_metrology_model);
m(x_add_metrology_object_generic);
m(x_get_metrology_model_param);
m(x_set_metrology_model_param);
m(x_deserialize_metrology_model);
m(x_serialize_metrology_model);
m(x_transform_metrology_object);
m(x_write_metrology_model);
m(x_read_metrology_model);
m(x_copy_metrology_model);
m(x_copy_metrology_object);
m(x_get_metrology_object_num_instances);
m(x_get_metrology_object_result);
m(x_get_metrology_object_measures);
m(x_apply_metrology_model);
m(x_get_metrology_object_indices);
m(x_reset_metrology_object_fuzzy_param);
m(x_reset_metrology_object_param);
m(x_get_metrology_object_fuzzy_param);
m(x_get_metrology_object_param);
m(x_set_metrology_object_fuzzy_param);
m(x_set_metrology_object_param);
m(x_add_metrology_object_rectangle2_measure);
m(x_add_metrology_object_line_measure);
m(x_add_metrology_object_ellipse_measure);
m(x_add_metrology_object_circle_measure);
m(x_clear_all_metrology_models);
m(x_clear_metrology_model);
m(x_clear_metrology_object);
m(x_set_metrology_model_image_size);
m(x_create_metrology_model);
m(x_serialize_measure);
m(x_deserialize_measure);
m(x_write_measure);
m(x_read_measure);
m(x_measure_thresh);
m(x_close_all_measures);
m(x_close_measure);
m(x_measure_projection);
m(x_reset_fuzzy_measure);
m(x_set_fuzzy_measure_norm_pair);
m(x_set_fuzzy_measure);
m(x_fuzzy_measure_pairing);
m(x_fuzzy_measure_pairs);
m(x_fuzzy_measure_pos);
m(x_measure_pairs);
m(x_measure_pos);
m(x_translate_measure);
m(x_gen_measure_arc);
m(x_gen_measure_rectangle2);
m(x_deserialize_matrix);
m(x_serialize_matrix);
m(x_read_matrix);
m(x_write_matrix);
m(x_orthogonal_decompose_matrix);
m(x_decompose_matrix);
m(x_svd_matrix);
m(x_generalized_eigenvalues_general_matrix);
m(x_generalized_eigenvalues_symmetric_matrix);
m(x_eigenvalues_general_matrix);
m(x_eigenvalues_symmetric_matrix);
m(x_solve_matrix);
m(x_determinant_matrix);
m(x_invert_matrix_mod);
m(x_invert_matrix);
m(x_transpose_matrix_mod);
m(x_transpose_matrix);
m(x_max_matrix);
m(x_min_matrix);
m(x_pow_matrix_mod);
m(x_pow_matrix);
m(x_pow_element_matrix_mod);
m(x_pow_element_matrix);
m(x_pow_scalar_element_matrix_mod);
m(x_pow_scalar_element_matrix);
m(x_sqrt_matrix_mod);
m(x_sqrt_matrix);
m(x_abs_matrix_mod);
m(x_abs_matrix);
m(x_norm_matrix);
m(x_mean_matrix);
m(x_sum_matrix);
m(x_div_element_matrix_mod);
m(x_div_element_matrix);
m(x_mult_element_matrix_mod);
m(x_mult_element_matrix);
m(x_scale_matrix_mod);
m(x_scale_matrix);
m(x_sub_matrix_mod);
m(x_sub_matrix);
m(x_add_matrix_mod);
m(x_add_matrix);
m(x_mult_matrix_mod);
m(x_mult_matrix);
m(x_get_size_matrix);
m(x_repeat_matrix);
m(x_copy_matrix);
m(x_set_diagonal_matrix);
m(x_get_diagonal_matrix);
m(x_set_sub_matrix);
m(x_get_sub_matrix);
m(x_set_full_matrix);
m(x_get_full_matrix);
m(x_set_value_matrix);
m(x_get_value_matrix);
m(x_clear_all_matrices);
m(x_clear_matrix);
m(x_create_matrix);
m(x_clear_all_sample_identifiers);
m(x_clear_sample_identifier);
m(x_deserialize_sample_identifier);
m(x_read_sample_identifier);
m(x_serialize_sample_identifier);
m(x_write_sample_identifier);
m(x_apply_sample_identifier);
m(x_get_sample_identifier_param);
m(x_set_sample_identifier_param);
m(x_get_sample_identifier_object_info);
m(x_set_sample_identifier_object_info);
m(x_remove_sample_identifier_training_data);
m(x_remove_sample_identifier_preparation_data);
m(x_train_sample_identifier);
m(x_add_sample_identifier_training_data);
m(x_prepare_sample_identifier);
m(x_add_sample_identifier_preparation_data);
m(x_create_sample_identifier);
m(x_deserialize_shape_model);
m(x_read_shape_model);
m(x_serialize_shape_model);
m(x_write_shape_model);
m(x_clear_all_shape_models);
m(x_clear_shape_model);
m(x_get_shape_model_contours);
m(x_determine_shape_model_params);
m(x_get_shape_model_params);
m(x_get_shape_model_origin);
m(x_set_shape_model_origin);
m(x_find_aniso_shape_models);
m(x_find_scaled_shape_models);
m(x_find_shape_models);
m(x_find_aniso_shape_model);
m(x_find_scaled_shape_model);
m(x_find_shape_model);
m(x_set_shape_model_metric);
m(x_set_shape_model_param);
m(x_create_aniso_shape_model_xld);
m(x_create_scaled_shape_model_xld);
m(x_create_shape_model_xld);
m(x_create_aniso_shape_model);
m(x_create_scaled_shape_model);
m(x_create_shape_model);
m(x_inspect_shape_model);
m(x_clear_all_descriptor_models);
m(x_clear_descriptor_model);
m(x_deserialize_descriptor_model);
m(x_serialize_descriptor_model);
m(x_read_descriptor_model);
m(x_write_descriptor_model);
m(x_find_calib_descriptor_model);
m(x_find_uncalib_descriptor_model);
m(x_get_descriptor_model_points);
m(x_get_descriptor_model_params);
m(x_create_calib_descriptor_model);
m(x_create_uncalib_descriptor_model);
m(x_get_descriptor_model_results);
m(x_get_descriptor_model_origin);
m(x_set_descriptor_model_origin);
m(x_get_deformable_model_origin);
m(x_set_deformable_model_origin);
m(x_set_deformable_model_param);
m(x_get_deformable_model_params);
m(x_get_deformable_model_contours);
m(x_determine_deformable_model_params);
m(x_deserialize_deformable_model);
m(x_serialize_deformable_model);
m(x_read_deformable_model);
m(x_write_deformable_model);
m(x_clear_all_deformable_models);
m(x_clear_deformable_model);
m(x_find_local_deformable_model);
m(x_find_planar_calib_deformable_model);
m(x_find_planar_uncalib_deformable_model);
m(x_set_local_deformable_model_metric);
m(x_set_planar_calib_deformable_model_metric);
m(x_set_planar_uncalib_deformable_model_metric);
m(x_create_local_deformable_model_xld);
m(x_create_planar_calib_deformable_model_xld);
m(x_create_planar_uncalib_deformable_model_xld);
m(x_create_local_deformable_model);
m(x_create_planar_calib_deformable_model);
m(x_create_planar_uncalib_deformable_model);
m(x_clear_all_ncc_models);
m(x_clear_ncc_model);
m(x_deserialize_ncc_model);
m(x_serialize_ncc_model);
m(x_read_ncc_model);
m(x_write_ncc_model);
m(x_determine_ncc_model_params);
m(x_get_ncc_model_params);
m(x_get_ncc_model_origin);
m(x_set_ncc_model_origin);
m(x_find_ncc_model);
m(x_set_ncc_model_param);
m(x_create_ncc_model);
m(x_get_found_component_model);
m(x_find_component_model);
m(x_clear_all_component_models);
m(x_clear_component_model);
m(x_get_component_model_tree);
m(x_get_component_model_params);
m(x_deserialize_component_model);
m(x_serialize_component_model);
m(x_read_component_model);
m(x_write_component_model);
m(x_create_component_model);
m(x_create_trained_component_model);
m(x_clear_all_training_components);
m(x_clear_training_components);
m(x_get_component_relations);
m(x_get_training_components);
m(x_modify_component_relations);
m(x_deserialize_training_components);
m(x_serialize_training_components);
m(x_read_training_components);
m(x_write_training_components);
m(x_cluster_model_components);
m(x_inspect_clustered_components);
m(x_train_model_components);
m(x_gen_initial_components);
m(x_get_deformable_surface_matching_result);
m(x_clear_deformable_surface_matching_result);
m(x_clear_deformable_surface_model);
m(x_deserialize_deformable_surface_model);
m(x_serialize_deformable_surface_model);
m(x_read_deformable_surface_model);
m(x_write_deformable_surface_model);
m(x_refine_deformable_surface_model);
m(x_find_deformable_surface_model);
m(x_get_deformable_surface_model_param);
m(x_add_deformable_surface_model_reference_point);
m(x_add_deformable_surface_model_sample);
m(x_create_deformable_surface_model);
m(x_get_surface_matching_result);
m(x_clear_all_surface_matching_results);
m(x_clear_surface_matching_result);
m(x_clear_all_surface_models);
m(x_clear_surface_model);
m(x_deserialize_surface_model);
m(x_serialize_surface_model);
m(x_read_surface_model);
m(x_write_surface_model);
m(x_refine_surface_model_pose);
m(x_find_surface_model);
m(x_get_surface_model_param);
m(x_create_surface_model);
m(x_create_cam_pose_look_at_point);
m(x_convert_point_3d_spher_to_cart);
m(x_convert_point_3d_cart_to_spher);
m(x_clear_all_shape_model_3d);
m(x_clear_shape_model_3d);
m(x_deserialize_shape_model_3d);
m(x_serialize_shape_model_3d);
m(x_read_shape_model_3d);
m(x_write_shape_model_3d);
m(x_trans_pose_shape_model_3d);
m(x_project_shape_model_3d);
m(x_get_shape_model_3d_contours);
m(x_get_shape_model_3d_params);
m(x_find_shape_model_3d);
m(x_create_shape_model_3d);
m(x_simplify_object_model_3d);
m(x_distance_object_model_3d);
m(x_union_object_model_3d);
m(x_set_object_model_3d_attrib_mod);
m(x_set_object_model_3d_attrib);
m(x_gen_empty_object_model_3d);
m(x_sample_object_model_3d);
m(x_register_object_model_3d_global);
m(x_register_object_model_3d_pair);
m(x_gen_object_model_3d_from_points);
m(x_gen_box_object_model_3d);
m(x_gen_plane_object_model_3d);
m(x_gen_sphere_object_model_3d_center);
m(x_gen_sphere_object_model_3d);
m(x_gen_cylinder_object_model_3d);
m(x_smallest_bounding_box_object_model_3d);
m(x_smallest_sphere_object_model_3d);
m(x_intersect_plane_object_model_3d);
m(x_convex_hull_object_model_3d);
m(x_select_object_model_3d);
m(x_area_object_model_3d);
m(x_max_diameter_object_model_3d);
m(x_moments_object_model_3d);
m(x_volume_object_model_3d_relative_to_plane);
m(x_reduce_object_model_3d_by_view);
m(x_connection_object_model_3d);
m(x_select_points_object_model_3d);
m(x_get_disp_object_model_3d_info);
m(x_render_object_model_3d);
m(x_disp_object_model_3d);
m(x_copy_object_model_3d);
m(x_prepare_object_model_3d);
m(x_object_model_3d_to_xyz);
m(x_xyz_to_object_model_3d);
m(x_get_object_model_3d_params);
m(x_project_object_model_3d);
m(x_rigid_trans_object_model_3d);
m(x_projective_trans_object_model_3d);
m(x_affine_trans_object_model_3d);
m(x_clear_all_object_model_3d);
m(x_clear_object_model_3d);
m(x_serialize_object_model_3d);
m(x_deserialize_object_model_3d);
m(x_write_object_model_3d);
m(x_read_object_model_3d);
m(x_read_object_model_3d_dxf);
m(x_read_kalman);
m(x_update_kalman);
m(x_filter_kalman);
m(x_query_operator_info);
m(x_query_param_info);
m(x_get_operator_name);
m(x_get_param_types);
m(x_get_param_num);
m(x_get_param_names);
m(x_get_operator_info);
m(x_get_param_info);
m(x_search_operator);
m(x_get_keywords);
m(x_get_chapter_info);
m(x_channels_to_image);
m(x_image_to_channels);
m(x_compose7);
m(x_compose6);
m(x_compose5);
m(x_compose4);
m(x_compose3);
m(x_compose2);
m(x_decompose7);
m(x_decompose6);
m(x_decompose5);
m(x_decompose4);
m(x_decompose3);
m(x_decompose2);
m(x_count_channels);
m(x_append_channel);
m(x_access_channel);
m(x_tile_images_offset);
m(x_tile_images);
m(x_tile_channels);
m(x_crop_domain);
m(x_crop_rectangle1);
m(x_crop_part);
m(x_change_format);
m(x_change_domain);
m(x_add_channels);
m(x_rectangle1_domain);
m(x_reduce_domain);
m(x_full_domain);
m(x_get_domain);
m(x_hough_circles);
m(x_hough_circle_trans);
m(x_hough_lines_dir);
m(x_hough_line_trans_dir);
m(x_hough_lines);
m(x_hough_line_trans);
m(x_select_matching_lines);
m(x_find_rectification_grid);
m(x_create_rectification_grid);
m(x_connect_grid_points);
m(x_gen_grid_rectification_map);
m(x_gen_arbitrary_distortion_map);
m(x_get_window_background_image);
m(x_set_drawing_object_callback);
m(x_detach_background_from_window);
m(x_attach_background_to_window);
m(x_detach_drawing_object_from_window);
m(x_attach_drawing_object_to_window);
m(x_update_window_pose);
m(x_unproject_coordinates);
m(x_get_os_window_handle);
m(x_set_window_dc);
m(x_new_extern_window);
m(x_slide_image);
m(x_set_window_type);
m(x_set_window_extents);
m(x_get_window_attr);
m(x_set_window_attr);
m(x_query_window_type);
m(x_open_window);
m(x_open_textwindow);
m(x_move_rectangle);
m(x_get_window_type);
m(x_get_window_pointer3);
m(x_get_window_extents);
m(x_dump_window_image);
m(x_dump_window);
m(x_copy_rectangle);
m(x_close_window);
m(x_clear_window);
m(x_clear_rectangle);
m(x_write_string);
m(x_set_tshape);
m(x_set_tposition);
m(x_read_string);
m(x_read_char);
m(x_new_line);
m(x_get_tshape);
m(x_get_tposition);
m(x_get_font_extents);
m(x_get_string_extents);
m(x_query_font);
m(x_query_tshape);
m(x_set_font);
m(x_get_font);
m(x_get_display_scene_3d_info);
m(x_set_scene_3d_to_world_pose);
m(x_set_scene_3d_param);
m(x_set_scene_3d_light_param);
m(x_set_scene_3d_instance_pose);
m(x_set_scene_3d_instance_param);
m(x_set_scene_3d_camera_pose);
m(x_render_scene_3d);
m(x_remove_scene_3d_light);
m(x_remove_scene_3d_instance);
m(x_remove_scene_3d_camera);
m(x_display_scene_3d);
m(x_add_scene_3d_light);
m(x_add_scene_3d_instance);
m(x_add_scene_3d_camera);
m(x_clear_scene_3d);
m(x_create_scene_3d);
m(x_get_window_param);
m(x_set_window_param);
m(x_set_shape);
m(x_set_rgb);
m(x_set_pixel);
m(x_set_part_style);
m(x_set_part);
m(x_set_paint);
m(x_set_line_width);
m(x_set_line_style);
m(x_set_line_approx);
m(x_set_insert);
m(x_set_hsi);
m(x_set_gray);
m(x_set_draw);
m(x_set_comprise);
m(x_set_colored);
m(x_set_color);
m(x_get_shape);
m(x_get_rgb);
m(x_get_pixel);
m(x_get_part_style);
m(x_get_part);
m(x_get_paint);
m(x_get_line_width);
m(x_get_line_style);
m(x_get_line_approx);
m(x_get_insert);
m(x_get_hsi);
m(x_get_draw);
m(x_get_comprise);
m(x_query_shape);
m(x_query_paint);
m(x_query_line_width);
m(x_query_insert);
m(x_query_gray);
m(x_query_colored);
m(x_query_all_colors);
m(x_query_color);
m(x_get_icon);
m(x_set_icon);
m(x_disp_region);
m(x_disp_rectangle2);
m(x_disp_rectangle1);
m(x_disp_polygon);
m(x_disp_line);
m(x_disp_cross);
m(x_disp_image);
m(x_disp_channel);
m(x_disp_color);
m(x_disp_ellipse);
m(x_disp_distribution);
m(x_disp_circle);
m(x_disp_arrow);
m(x_disp_arc);
m(x_disp_obj);
m(x_set_mshape);
m(x_get_mshape);
m(x_query_mshape);
m(x_get_mposition_sub_pix);
m(x_get_mposition);
m(x_get_mbutton_sub_pix);
m(x_get_mbutton);
m(x_write_lut);
m(x_disp_lut);
m(x_query_lut);
m(x_draw_lut);
m(x_get_lut_style);
m(x_set_lut_style);
m(x_get_lut);
m(x_set_lut);
m(x_get_fix);
m(x_set_fix);
m(x_get_fixed_lut);
m(x_set_fixed_lut);
m(x_gnuplot_plot_funct_1d);
m(x_gnuplot_plot_ctrl);
m(x_gnuplot_plot_image);
m(x_gnuplot_close);
m(x_gnuplot_open_file);
m(x_gnuplot_open_pipe);
m(x_create_drawing_object_text);
m(x_get_drawing_object_iconic);
m(x_clear_drawing_object);
m(x_set_drawing_object_params);
m(x_get_drawing_object_params);
m(x_set_drawing_object_xld);
m(x_create_drawing_object_xld);
m(x_create_drawing_object_circle_sector);
m(x_create_drawing_object_ellipse_sector);
m(x_create_drawing_object_line);
m(x_create_drawing_object_circle);
m(x_create_drawing_object_ellipse);
m(x_create_drawing_object_rectangle2);
m(x_create_drawing_object_rectangle1);
m(x_drag_region3);
m(x_drag_region2);
m(x_drag_region1);
m(x_draw_nurbs_interp_mod);
m(x_draw_nurbs_interp);
m(x_draw_nurbs_mod);
m(x_draw_nurbs);
m(x_draw_xld_mod);
m(x_draw_xld);
m(x_draw_rectangle2_mod);
m(x_draw_rectangle2);
m(x_draw_rectangle1_mod);
m(x_draw_rectangle1);
m(x_draw_point_mod);
m(x_draw_point);
m(x_draw_line_mod);
m(x_draw_line);
m(x_draw_ellipse_mod);
m(x_draw_ellipse);
m(x_draw_circle_mod);
m(x_draw_circle);
m(x_draw_region);
m(x_draw_polygon);
m(x_projection_pl);
m(x_get_points_ellipse);
m(x_intersection_ll);
m(x_intersection_contours_xld);
m(x_intersection_circle_contour_xld);
m(x_intersection_circles);
m(x_intersection_line_contour_xld);
m(x_intersection_line_circle);
m(x_intersection_lines);
m(x_intersection_segment_contour_xld);
m(x_intersection_segment_circle);
m(x_intersection_segment_line);
m(x_intersection_segments);
m(x_clear_distance_transform_xld);
m(x_apply_distance_transform_xld);
m(x_read_distance_transform_xld);
m(x_deserialize_distance_transform_xld);
m(x_serialize_distance_transform_xld);
m(x_write_distance_transform_xld);
m(x_set_distance_transform_xld_param);
m(x_get_distance_transform_xld_param);
m(x_get_distance_transform_xld_contour);
m(x_create_distance_transform_xld);
m(x_distance_contours_xld);
m(x_distance_cc_min);
m(x_distance_cc);
m(x_distance_sc);
m(x_distance_lc);
m(x_distance_pc);
m(x_distance_sr);
m(x_distance_lr);
m(x_distance_pr);
m(x_angle_lx);
m(x_angle_ll);
m(x_distance_sl);
m(x_distance_ss);
m(x_distance_ps);
m(x_distance_pl);
m(x_distance_pp);
m(x_compose_funct_1d);
m(x_invert_funct_1d);
m(x_derivate_funct_1d);
m(x_local_min_max_funct_1d);
m(x_zero_crossings_funct_1d);
m(x_scale_y_funct_1d);
m(x_negate_funct_1d);
m(x_abs_funct_1d);
m(x_get_y_value_funct_1d);
m(x_get_pair_funct_1d);
m(x_num_points_funct_1d);
m(x_y_range_funct_1d);
m(x_x_range_funct_1d);
m(x_funct_1d_to_pairs);
m(x_sample_funct_1d);
m(x_transform_funct_1d);
m(x_match_funct_1d_trans);
m(x_distance_funct_1d);
m(x_smooth_funct_1d_gauss);
m(x_integrate_funct_1d);
m(x_read_funct_1d);
m(x_write_funct_1d);
m(x_create_funct_1d_array);
m(x_create_funct_1d_pairs);
m(x_smooth_funct_1d_mean);
m(x_match_fourier_coeff);
m(x_fourier_1dim_inv);
m(x_abs_invar_fourier_coeff);
m(x_invar_fourier_coeff);
m(x_fourier_1dim);
m(x_prep_contour_fourier);
m(x_move_contour_orig);
m(x_texture_laws);
m(x_deviation_image);
m(x_entropy_image);
m(x_isotropic_diffusion);
m(x_anisotropic_diffusion);
m(x_smooth_image);
m(x_sigma_image);
m(x_midrange_image);
m(x_trimmed_mean);
m(x_median_separate);
m(x_median_rect);
m(x_median_image);
m(x_median_weighted);
m(x_rank_rect);
m(x_rank_image);
m(x_dual_rank);
m(x_mean_image);
m(x_info_smooth);
m(x_binomial_filter);
m(x_gauss_image);
m(x_gauss_filter);
m(x_eliminate_min_max);
m(x_anisotrope_diff);
m(x_fill_interlace);
m(x_rank_n);
m(x_mean_n);
m(x_eliminate_sp);
m(x_mean_sp);
m(x_points_sojka);
m(x_dots_image);
m(x_local_min_sub_pix);
m(x_local_max_sub_pix);
m(x_saddle_points_sub_pix);
m(x_critical_points_sub_pix);
m(x_points_harris);
m(x_points_harris_binomial);
m(x_points_lepetit);
m(x_points_foerstner);
m(x_estimate_noise);
m(x_noise_distribution_mean);
m(x_add_noise_white);
m(x_add_noise_distribution);
m(x_gauss_distribution);
m(x_sp_distribution);
m(x_deviation_n);
m(x_inpainting_texture);
m(x_inpainting_ct);
m(x_inpainting_mcf);
m(x_inpainting_ced);
m(x_inpainting_aniso);
m(x_harmonic_interpolation);
m(x_expand_domain_gray);
m(x_topographic_sketch);
m(x_linear_trans_color);
m(x_gen_principal_comp_trans);
m(x_principal_comp);
m(x_fuzzy_entropy);
m(x_fuzzy_perimeter);
m(x_gray_closing_shape);
m(x_gray_opening_shape);
m(x_gray_erosion_shape);
m(x_gray_dilation_shape);
m(x_gray_range_rect);
m(x_gray_closing_rect);
m(x_gray_opening_rect);
m(x_gray_erosion_rect);
m(x_gray_dilation_rect);
m(x_gray_skeleton);
m(x_lut_trans);
m(x_convol_image);
m(x_convert_image_type);
m(x_real_to_vector_field);
m(x_vector_field_to_real);
m(x_real_to_complex);
m(x_complex_to_real);
m(x_region_to_mean);
m(x_gray_inside);
m(x_symmetry);
m(x_select_grayvalues_from_channels);
m(x_depth_from_focus);
m(x_scene_flow_calib);
m(x_scene_flow_uncalib);
m(x_unwarp_image_vector_field);
m(x_derivate_vector_field);
m(x_vector_field_length);
m(x_optical_flow_mg);
m(x_exhaustive_match_mg);
m(x_create_template_rot);
m(x_create_template);
m(x_serialize_template);
m(x_deserialize_template);
m(x_write_template);
m(x_read_template);
m(x_clear_all_templates);
m(x_clear_template);
m(x_set_offset_template);
m(x_set_reference_template);
m(x_adapt_template);
m(x_fast_match_mg);
m(x_best_match_pre_mg);
m(x_best_match_mg);
m(x_fast_match);
m(x_best_match_rot_mg);
m(x_best_match_rot);
m(x_best_match);
m(x_exhaustive_match);
m(x_corner_response);
m(x_gen_gauss_pyramid);
m(x_monotony);
m(x_bandpass_image);
m(x_lines_color);
m(x_lines_gauss);
m(x_lines_facet);
m(x_gen_filter_mask);
m(x_gen_mean_filter);
m(x_gen_gauss_filter);
m(x_gen_derivative_filter);
m(x_gen_std_bandpass);
m(x_gen_sin_bandpass);
m(x_gen_bandfilter);
m(x_gen_bandpass);
m(x_gen_lowpass);
m(x_gen_highpass);
m(x_power_ln);
m(x_power_real);
m(x_power_byte);
m(x_phase_deg);
m(x_phase_rad);
m(x_energy_gabor);
m(x_convol_gabor);
m(x_gen_gabor);
m(x_phase_correlation_fft);
m(x_correlation_fft);
m(x_convol_fft);
m(x_deserialize_fft_optimization_data);
m(x_serialize_fft_optimization_data);
m(x_read_fft_optimization_data);
m(x_write_fft_optimization_data);
m(x_optimize_rft_speed);
m(x_optimize_fft_speed);
m(x_rft_generic);
m(x_fft_image_inv);
m(x_fft_image);
m(x_fft_generic);
m(x_shock_filter);
m(x_mean_curvature_flow);
m(x_coherence_enhancing_diff);
m(x_equ_histo_image);
m(x_illuminate);
m(x_emphasize);
m(x_scale_image_max);
m(x_robinson_dir);
m(x_robinson_amp);
m(x_kirsch_dir);
m(x_kirsch_amp);
m(x_frei_dir);
m(x_frei_amp);
m(x_prewitt_dir);
m(x_prewitt_amp);
m(x_sobel_amp);
m(x_sobel_dir);
m(x_roberts);
m(x_laplace);
m(x_highpass_image);
m(x_info_edges);
m(x_edges_color_sub_pix);
m(x_edges_color);
m(x_edges_sub_pix);
m(x_edges_image);
m(x_derivate_gauss);
m(x_laplace_of_gauss);
m(x_diff_of_gauss);
m(x_close_edges_length);
m(x_close_edges);
m(x_detect_edge_segments);
m(x_clear_all_color_trans_luts);
m(x_clear_color_trans_lut);
m(x_apply_color_trans_lut);
m(x_create_color_trans_lut);
m(x_cfa_to_rgb);
m(x_rgb1_to_gray);
m(x_rgb3_to_gray);
m(x_trans_from_rgb);
m(x_trans_to_rgb);
m(x_bit_mask);
m(x_bit_slice);
m(x_bit_rshift);
m(x_bit_lshift);
m(x_bit_not);
m(x_bit_xor);
m(x_bit_or);
m(x_bit_and);
m(x_gamma_image);
m(x_pow_image);
m(x_exp_image);
m(x_log_image);
m(x_atan2_image);
m(x_atan_image);
m(x_acos_image);
m(x_asin_image);
m(x_tan_image);
m(x_cos_image);
m(x_sin_image);
m(x_abs_diff_image);
m(x_sqrt_image);
m(x_sub_image);
m(x_scale_image);
m(x_div_image);
m(x_mult_image);
m(x_add_image);
m(x_abs_image);
m(x_min_image);
m(x_max_image);
m(x_invert_image);
m(x_adjust_mosaic_images);
m(x_gen_cube_map_mosaic);
m(x_gen_spherical_mosaic);
m(x_gen_bundle_adjusted_mosaic);
m(x_gen_projective_mosaic);
m(x_projective_trans_image_size);
m(x_projective_trans_image);
m(x_affine_trans_image_size);
m(x_affine_trans_image);
m(x_zoom_image_factor);
m(x_zoom_image_size);
m(x_mirror_image);
m(x_rotate_image);
m(x_polar_trans_image_inv);
m(x_polar_trans_image_ext);
m(x_polar_trans_image);
m(x_vector_field_to_hom_mat2d);
m(x_deserialize_xld);
m(x_serialize_xld);
m(x_read_polygon_xld_dxf);
m(x_write_polygon_xld_dxf);
m(x_read_contour_xld_dxf);
m(x_write_contour_xld_dxf);
m(x_copy_file);
m(x_set_current_dir);
m(x_get_current_dir);
m(x_remove_dir);
m(x_make_dir);
m(x_list_files);
m(x_delete_file);
m(x_file_exists);
m(x_read_object);
m(x_write_object);
m(x_deserialize_object);
m(x_serialize_object);
m(x_deserialize_image);
m(x_serialize_image);
m(x_deserialize_region);
m(x_serialize_region);
m(x_write_region);
m(x_write_image);
m(x_read_sequence);
m(x_read_region);
m(x_read_image);
m(x_open_file);
m(x_fwrite_string);
m(x_fread_line);
m(x_fread_string);
m(x_fread_char);
m(x_fnew_line);
m(x_close_file);
m(x_close_all_files);
m(x_test_closed_xld);
m(x_get_grayval_contour_xld);
m(x_moments_any_points_xld);
m(x_eccentricity_points_xld);
m(x_elliptic_axis_points_xld);
m(x_orientation_points_xld);
m(x_moments_points_xld);
m(x_area_center_points_xld);
m(x_test_self_intersection_xld);
m(x_select_xld_point);
m(x_test_xld_point);
m(x_select_shape_xld);
m(x_orientation_xld);
m(x_eccentricity_xld);
m(x_compactness_xld);
m(x_diameter_xld);
m(x_convexity_xld);
m(x_circularity_xld);
m(x_elliptic_axis_xld);
m(x_smallest_rectangle2_xld);
m(x_smallest_rectangle1_xld);
m(x_smallest_circle_xld);
m(x_shape_trans_xld);
m(x_length_xld);
m(x_moments_any_xld);
m(x_moments_xld);
m(x_area_center_xld);
m(x_moments_region_central_invar);
m(x_moments_region_central);
m(x_moments_region_3rd_invar);
m(x_moments_region_3rd);
m(x_smallest_rectangle2);
m(x_smallest_rectangle1);
m(x_smallest_circle);
m(x_select_shape_proto);
m(x_region_features);
m(x_select_shape);
m(x_runlength_features);
m(x_find_neighbors);
m(x_moments_region_2nd_rel_invar);
m(x_moments_region_2nd_invar);
m(x_moments_region_2nd);
m(x_distance_rr_min);
m(x_distance_rr_min_dil);
m(x_diameter_region);
m(x_test_region_point);
m(x_get_region_index);
m(x_select_region_point);
m(x_select_shape_std);
m(x_hamming_distance_norm);
m(x_hamming_distance);
m(x_eccentricity);
m(x_euler_number);
m(x_orientation_region);
m(x_elliptic_axis);
m(x_select_region_spatial);
m(x_spatial_relation);
m(x_convexity);
m(x_contlength);
m(x_connect_and_holes);
m(x_rectangularity);
m(x_compactness);
m(x_circularity);
m(x_area_holes);
m(x_area_center);
m(x_runlength_distribution);
m(x_roundness);
m(x_inner_rectangle1);
m(x_inner_circle);
m(x_select_lines_longest);
m(x_partition_lines);
m(x_select_lines);
m(x_line_position);
m(x_line_orientation);
m(x_approx_chain_simple);
m(x_approx_chain);
m(x_fit_surface_first_order);
m(x_fit_surface_second_order);
m(x_gen_image_surface_second_order);
m(x_gen_image_surface_first_order);
m(x_shape_histo_point);
m(x_shape_histo_all);
m(x_gray_features);
m(x_select_gray);
m(x_min_max_gray);
m(x_intensity);
m(x_gray_histo_range);
m(x_histo_2dim);
m(x_gray_histo_abs);
m(x_gray_histo);
m(x_entropy_gray);
m(x_cooc_feature_matrix);
m(x_cooc_feature_image);
m(x_gen_cooc_matrix);
m(x_moments_gray_plane);
m(x_plane_deviation);
m(x_elliptic_axis_gray);
m(x_area_center_gray);
m(x_gray_projections);
m(x_get_data_code_2d_objects);
m(x_get_data_code_2d_results);
m(x_find_data_code_2d);
m(x_set_data_code_2d_param);
m(x_get_data_code_2d_param);
m(x_query_data_code_2d_params);
m(x_deserialize_data_code_2d_model);
m(x_serialize_data_code_2d_model);
m(x_read_data_code_2d_model);
m(x_write_data_code_2d_model);
m(x_clear_all_data_code_2d_models);
m(x_clear_data_code_2d_model);
m(x_create_data_code_2d_model);
m(x_deserialize_class_train_data);
m(x_serialize_class_train_data);
m(x_read_class_train_data);
m(x_write_class_train_data);
m(x_select_sub_feature_class_train_data);
m(x_set_feature_lengths_class_train_data);
m(x_get_class_train_data_gmm);
m(x_add_class_train_data_gmm);
m(x_get_class_train_data_mlp);
m(x_add_class_train_data_mlp);
m(x_get_class_train_data_knn);
m(x_add_class_train_data_knn);
m(x_get_class_train_data_svm);
m(x_add_class_train_data_svm);
m(x_get_sample_num_class_train_data);
m(x_get_sample_class_train_data);
m(x_clear_all_class_train_data);
m(x_clear_class_train_data);
m(x_add_sample_class_train_data);
m(x_create_class_train_data);
m(x_select_feature_set_mlp);
m(x_select_feature_set_svm);
m(x_select_feature_set_gmm);
m(x_select_feature_set_knn);
m(x_clear_all_class_knn);
m(x_clear_class_knn);
m(x_get_sample_num_class_knn);
m(x_get_sample_class_knn);
m(x_deserialize_class_knn);
m(x_serialize_class_knn);
m(x_read_class_knn);
m(x_write_class_knn);
m(x_get_params_class_knn);
m(x_set_params_class_knn);
m(x_classify_class_knn);
m(x_train_class_knn);
m(x_add_sample_class_knn);
m(x_create_class_knn);
m(x_clear_all_class_lut);
m(x_clear_class_lut);
m(x_create_class_lut_knn);
m(x_create_class_lut_gmm);
m(x_create_class_lut_svm);
m(x_create_class_lut_mlp);
m(x_clear_all_class_gmm);
m(x_clear_class_gmm);
m(x_clear_samples_class_gmm);
m(x_deserialize_class_gmm);
m(x_serialize_class_gmm);
m(x_read_class_gmm);
m(x_write_class_gmm);
m(x_read_samples_class_gmm);
m(x_write_samples_class_gmm);
m(x_classify_class_gmm);
m(x_evaluate_class_gmm);
m(x_train_class_gmm);
m(x_get_prep_info_class_gmm);
m(x_get_sample_num_class_gmm);
m(x_get_sample_class_gmm);
m(x_add_sample_class_gmm);
m(x_get_params_class_gmm);
m(x_create_class_gmm);
m(x_clear_all_class_svm);
m(x_clear_class_svm);
m(x_clear_samples_class_svm);
m(x_deserialize_class_svm);
m(x_serialize_class_svm);
m(x_read_class_svm);
m(x_write_class_svm);
m(x_read_samples_class_svm);
m(x_write_samples_class_svm);
m(x_evaluate_class_svm);
m(x_classify_class_svm);
m(x_reduce_class_svm);
m(x_train_class_svm);
m(x_get_prep_info_class_svm);
m(x_get_support_vector_num_class_svm);
m(x_get_support_vector_class_svm);
m(x_get_sample_num_class_svm);
m(x_get_sample_class_svm);
m(x_add_sample_class_svm);
m(x_get_params_class_svm);
m(x_create_class_svm);
m(x_clear_all_class_mlp);
m(x_clear_class_mlp);
m(x_clear_samples_class_mlp);
m(x_deserialize_class_mlp);
m(x_serialize_class_mlp);
m(x_read_class_mlp);
m(x_write_class_mlp);
m(x_read_samples_class_mlp);
m(x_write_samples_class_mlp);
m(x_classify_class_mlp);
m(x_evaluate_class_mlp);
m(x_train_class_mlp);
m(x_get_prep_info_class_mlp);
m(x_get_sample_num_class_mlp);
m(x_get_sample_class_mlp);
m(x_get_rejection_params_class_mlp);
m(x_set_rejection_params_class_mlp);
m(x_add_sample_class_mlp);
m(x_get_regularization_params_class_mlp);
m(x_set_regularization_params_class_mlp);
m(x_get_params_class_mlp);
m(x_create_class_mlp);
m(x_deserialize_class_box);
m(x_serialize_class_box);
m(x_write_class_box);
m(x_set_class_box_param);
m(x_read_sampset);
m(x_read_class_box);
m(x_learn_sampset_box);
m(x_learn_class_box);
m(x_get_class_box_param);
m(x_clear_sampset);
m(x_close_class_box);
m(x_create_class_box);
m(x_descript_class_box);
m(x_test_sampset_box);
m(x_enquire_reject_class_box);
m(x_enquire_class_box);
m(x_close_all_class_box);
m(x_convert_map_type);
m(x_vector_to_pose);
m(x_proj_hom_mat2d_to_pose);
m(x_radial_distortion_self_calibration);
m(x_cam_par_to_cam_mat);
m(x_cam_mat_to_cam_par);
m(x_stationary_camera_self_calibration);
m(x_get_rectangle_pose);
m(x_get_circle_pose);
m(x_radiometric_self_calibration);
m(x_map_image);
m(x_gen_radial_distortion_map);
m(x_gen_image_to_world_plane_map);
m(x_image_to_world_plane);
m(x_contour_to_world_plane_xld);
m(x_image_points_to_world_plane);
m(x_set_origin_pose);
m(x_hand_eye_calibration);
m(x_get_pose_type);
m(x_convert_pose_type);
m(x_create_pose);
m(x_change_radial_distortion_contours_xld);
m(x_change_radial_distortion_points);
m(x_change_radial_distortion_image);
m(x_change_radial_distortion_cam_par);
m(x_gen_caltab);
m(x_create_caltab);
m(x_caltab_points);
m(x_get_line_of_sight);
m(x_project_hom_point_hom_mat3d);
m(x_project_point_hom_mat3d);
m(x_project_3d_point);
m(x_cam_par_pose_to_hom_mat3d);
m(x_hom_mat3d_to_pose);
m(x_pose_to_hom_mat3d);
m(x_deserialize_cam_par);
m(x_serialize_cam_par);
m(x_deserialize_pose);
m(x_serialize_pose);
m(x_read_pose);
m(x_write_pose);
m(x_read_cam_par);
m(x_write_cam_par);
m(x_sim_caltab);
m(x_disp_caltab);
m(x_camera_calibration);
m(x_find_marks_and_pose);
m(x_find_caltab);
m(x_clear_all_camera_setup_models);
m(x_clear_camera_setup_model);
m(x_serialize_camera_setup_model);
m(x_deserialize_camera_setup_model);
m(x_write_camera_setup_model);
m(x_read_camera_setup_model);
m(x_get_camera_setup_param);
m(x_set_camera_setup_param);
m(x_set_camera_setup_cam_param);
m(x_create_camera_setup_model);
m(x_clear_all_calib_data);
m(x_clear_calib_data);
m(x_deserialize_calib_data);
m(x_serialize_calib_data);
m(x_read_calib_data);
m(x_write_calib_data);
m(x_calibrate_hand_eye);
m(x_calibrate_cameras);
m(x_remove_calib_data);
m(x_set_calib_data);
m(x_find_calib_object);
m(x_remove_calib_data_observ);
m(x_get_calib_data_observ_contours);
m(x_get_calib_data_observ_pose);
m(x_set_calib_data_observ_pose);
m(x_get_calib_data_observ_points);
m(x_set_calib_data_observ_points);
m(x_query_calib_data_observ_indices);
m(x_get_calib_data);
m(x_set_calib_data_calib_object);
m(x_set_calib_data_cam_param);
m(x_create_calib_data);
m(x_get_bead_inspection_param);
m(x_set_bead_inspection_param);
m(x_apply_bead_inspection_model);
m(x_clear_bead_inspection_model);
m(x_create_bead_inspection_model);
m(x_deserialize_bar_code_model);
m(x_serialize_bar_code_model);
m(x_read_bar_code_model);
m(x_write_bar_code_model);
m(x_get_bar_code_object);
m(x_get_bar_code_result);
m(x_decode_bar_code_rectangle2);
m(x_find_bar_code);
m(x_query_bar_code_params);
m(x_get_bar_code_param_specific);
m(x_get_bar_code_param);
m(x_set_bar_code_param_specific);
m(x_set_bar_code_param);
m(x_clear_all_bar_code_models);
m(x_clear_bar_code_model);
m(x_create_bar_code_model);
m(x_decode_2d_bar_code);
m(x_get_2d_bar_code_pos);
m(x_get_2d_bar_code);
m(x_find_2d_bar_code);
m(x_gen_2d_bar_code_descr);
m(x_discrete_1d_bar_code);
m(x_decode_1d_bar_code);
m(x_get_1d_bar_code_scanline);
m(x_get_1d_bar_code);
m(x_find_1d_bar_code_region);
m(x_find_1d_bar_code_scanline);
m(x_find_1d_bar_code);
m(x_gen_1d_bar_code_descr);
m(x_gen_1d_bar_code_descr_gen);
m(x_close_bg_esti);
m(x_give_bg_esti);
m(x_update_bg_esti);
m(x_run_bg_esti);
m(x_get_bg_esti_params);
m(x_set_bg_esti_params);
m(x_create_bg_esti);
m(x_close_all_bg_esti);
m(x_control_io_channel);
m(x_write_io_channel);
m(x_read_io_channel);
m(x_set_io_channel_param);
m(x_get_io_channel_param);
m(x_close_io_channel);
m(x_open_io_channel);
m(x_query_io_device);
m(x_control_io_device);
m(x_set_io_device_param);
m(x_get_io_device_param);
m(x_close_io_device);
m(x_open_io_device);
m(x_control_io_interface);
m(x_query_io_interface);
m(x_get_framegrabber_param);
m(x_set_framegrabber_param);
m(x_get_framegrabber_callback);
m(x_set_framegrabber_callback);
m(x_grab_data_async);
m(x_grab_data);
m(x_grab_image_async);
m(x_grab_image_start);
m(x_grab_image);
m(x_info_framegrabber);
m(x_close_all_framegrabbers);
m(x_close_framegrabber);
m(x_open_framegrabber);
m(x_get_framegrabber_lut);
m(x_set_framegrabber_lut);
